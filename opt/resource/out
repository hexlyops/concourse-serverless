#!/bin/bash

set -e

{

    source $(dirname $0)/common.sh

    destination=$1
    cd $destination

    payload=$(mktemp $TMPDIR/concourse-serverless-resource.XXXXXX)
    cat > $payload <&0

    params=$(jq -r '.params // ""' < $payload)
    source=$(jq -r '.source // ""' < $payload)

    deploy=$(echo $params | jq -r '.deploy // false')
    remove=$(echo $params | jq -r '.remove // false')
    stage=$(echo $params | jq -r '.stage // ""')

    if [ -z $stage ]; then
        echo "invalid params (missing stage):" >&2
        cat $params >&2
        exit 1
    fi

    if [ $deploy = "false" ] && [ $remove = "false" ]; then
        echo "invalid params (either deploy or remove must be true):" >&2
        cat $params >&2
        exit 1
    fi


    region=$(echo $source | jq -r '.region_name // ""')
    npm_install=$(echo $params | jq -r '.npm_install // false')
    npm_build=$(echo $params | jq -r '.npm_build // false')
    npm_prefix=$(echo $params | jq -r '.npm_prefix // ""')
    npm_ls=$(echo $params | jq -r '.npm_ls // false')
    build_info=$(echo $params | jq -r '.build_info // false')

    # echo "region: $region || npm_build: $npm_build || npm_install: $npm_install || npm_prefix: $npm_prefix"

    if [ $npm_install = "true" ]; then
        if [ -z $npm_prefix ]; then
            npm install
        else
            npm install --prefix $npm_prefix
        fi
    fi

    if [ $npm_build  = "true" ]; then
            if [ -z $npm_prefix ]; then
            npm build
        else
            npm build --prefix $npm_prefix
        fi
    fi
    

    serverless_dir=$(echo $params | jq -r '.serverless // ""')

    if [ -z $serverless_dir ]; then
        echo "invalid params (must set serverless): " >&2
        cat $params >&2
        exit 1
    fi

    cd $serverless_dir


    if [ $build_info  = "true" ]; then
        echo "Including build info to package.json"
                    
        # --arg rev $(git rev-parse --short head) \
        # '.build = {} | .build.rev = $rev | .build.date = $ts | id = $bid | number = $bn | job = $job | pipeline = $pl ' package.json \

        prefix='.'
        if [ -z $npm_prefix ]; then
            prefix="$npm_prefix"
        fi
        jq  --arg ts $(date -u +"%Y-%m-%dT%H:%M:%SZ") \
            --arg bid "$BUILD_ID" \
            --arg bn "$BUILD_NAME" \
            --arg job "$BUILD_JOB_NAME" \
            --arg pl "$BUILD_PIPELINE_NAME" \
            '.build = {} | .build.date = $ts | .build.id = $bid | .build.number = $bn | .build.job = $job | .build.pipeline = $pl ' "$prefix/package.json" \
            > __package.json && mv __package.json package.json
    fi

    if [ $npm_ls = "true" ]; then
        npm ls || true # true so that `npm ls` doesn't cause us to blow up
    fi

    set_serverless_credentials "$source"

    regionflag=""
    if [ ! -z $region ]; then
        regionflag="--region $region"
    fi

    if [ $deploy = "true" ]; then
        serverless deploy -v --stage $stage $regionflag
    fi

    if [ $remove = "true" ]; then
        serverless remove -v --stage $stage $regionflag
    fi

} >&2

jq -n '{"version": { "ref": "'`date +"%m-%d-%Y_%H-%M-%S"`'"} }'